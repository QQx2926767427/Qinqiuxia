1 项目的目的
   1）熟练的掌握HTML布局（布局的思路要清晰）
   2）熟练掌握css样式（如何调整样式：审查元素）
   3）熟练掌握jquery写前端交互，熟悉jQuery插件的使用
   4）熟练掌握svn的使用

   账号：qinqiuxia
   密码：qinqiuxia726
   服务器地址：https://LAPTOP-D5RA4OBI/svn/legou/


2 git的基本操作
  1）git clone 仓库地址       //第一次从服务器下载代码
  2）git add .               //纳入版本控制
  3）git commit -m"简单描述"  //把代码提交到本地仓库
  4）git push origin master  //把代码推送到远程服务器
  5）git pull 仓库地址        //第一次以后从服务器下载代码
  6）git status              //查看仓库状态
    如果是红色的：那么需要纳入版本控制 git add .
    如果是绿色的：那么需要提交到本地仓库 git commit -m"描述信息"
    如果工作目录是干净的：那么可以直接继续写代码，有网的时候，再推送到远程服务器 git push orign master 

  补充：
      git config --global user.name"你的名字";
      git config --global user.email"你的邮箱";
    
    补充几个操作命令：
        pwd    //查看当前所在目录
        ls     //显示当前目录有哪些文件和文件夹
        clear  //清除屏幕

DAY01：
    1.创建项目代码仓库
      账号：qinqiuxia 密码：qinqiuxia726 地址：https://LAPTOP-D5RA4OBI/svn/legou/

    2.把项目放入这个代码仓库，规划好项目目录
      css      //样式
      images   //图片
      js       //js
      页面.html  //页面

    3.资源的准备
       图片
       量尺寸的工具
       vscode + 谷歌浏览器
       jquery
       reset.css
       common.css
    4.项目布局，先分大板块
       1.顶部
       2.导航
       3.分类导航和banner
       4.今日推荐
       5.电子书
       6.服装
       7.户外运动
       8.童装
       9.家居日用
       10.推广商品
       11.尾部

    5.z-index的问题
        必须有定位属性 才能设置z-index 值越大，优先显示，层级越高（离你越近）
    
    6.布局技巧
        A)基本技巧
           1）页面中所有的布局，都是由盒子组成的（盒子模型）
           2）写布局的时候，先布局全局，再调整局部
           3）布局的时候，先用背景色，把位置占好.

        B)浮动
           a) 左浮动
           b）右浮动
           c）清除浮动（最好的方式，通过在父级设置一个类（伪元素））

           说明：什么情况用浮动？
                 传统布局，块级元素，只要出现两栏（列）以上布局，就要用浮动

        C）定位
          a）子绝父相
               子绝对定位 父相对定位
               注意***：如果子元素是绝对定位，那么，它会相对最近的一个具有定位属性的父元素定位
                       如果父元素都没有定位属性，那么就是相对于浏览器定位（四个角）

          b）固定定位：相对于浏览器窗口定位，滚动条滚动的时候，一直在固定的位置
            但是，如果是绝对定位，滚动条滚动，会移动

          c）相对定位：相对于自己原来的位置定位

DAY02:
    1 强化布局（布局三巨头）
        1）盒子模型（所有的html页面都是由盒子组成的）：解决页面的布局问题
          a）标准盒子
          b）怪异盒子（宽度不计算边框 margin padding）
        2）浮动： 解决块级元素多列元素多列布局的问题（一般两列以上的，就要用浮动，记住一定要清除浮动！！！）
          a）左浮动
          b）右浮动
          c）清除浮动
        3）定位：解决一些特殊布局问题
          a）固定定位
          b）绝对定位
          c）相对定位
    2 强化样式css：解决样式（页面效果）问题
        1）强化选择器
    3 轮播
    4 tab切换
    5 手风琴

DAY03：
    1.推广商品左右滑动效果
    2.返回顶部功能实现（考虑功能的通用性）
    3.二维码展开和收缩功能
    4.顶部搜索框交互（考虑功能的通用性）
    5.楼层调转
       1）鼠标移入移出，展开效果和收缩效果
       2）点击对应选项，调转到对应的楼层的效果

DAY04:
    1.购物车的所有交互
    2.产品详情放大镜交互
    3.产品列表独家提供交互
    4.产品列表猜你喜欢交互

DAY05:
    前端的职责：
        1）还原UI设计图（把ui的图编程代码）html css
        2）实现前端交互（JS/jquery）
        3）前后端数据交互（发送ajax 调用后端接口）

    1.购物车交互（强化）
    2.产品列表猜你喜欢交互
    3.轮播的原理
    4.用户注册表单验证
       a）非空
       b）长度
       c）一致性
       d）格式（正则）
    5.弹出的蒙层

    补充：swiper的基本使用
        1.下载 引入资源文件
            swiper.css
            swiper.js

        2.找到实例中对应的结构，复制粘贴

        3.在JS中按照实例，传入配置参数

DAY06：
    1.星级评分（理解）
       1）三种状态的星星
           满星
           半星
           灰星

        2）计算
            4.2 => 4颗   => 向下取整（分数 * 2）/ 2  => Math.floor(4.2*2)/2 = 4
            4.6 => 4颗半 => 向下取整（分数 * 2) / 2  => Math.floor(4.6*2)/2 = 4.5
            3.7 => 3颗半 => 向下取整（分数 * 2）/ 2  => Math.floor(3.7*2)/2 = 3.5

        3）循环5
        a）计算结果的分数向下取整，算出满星
        b）判断是否有小数，如果有小数，就是半星
        c）剩下的，使用灰星补充
        
    2.无限滚动

1 阶段就业课目标
    1 阶段技术总结
    2 阶段技术面试点
    3 阶段必过面试题
    4 阶段内容扩展
    5 项目总结
2 ES6
    1）JS是遵循一个规范的，ECMAScript规范，ES6是ES2015，现在草案到ES10工作中，
    如果是使用vue或react或angular框架写项目，基本全部写ES6和ES7，如果是jquery
    之类的传统项目，用ES5

    注意：现在很多公司开始转向TypeScript，是JS的预处理语言，提供了强大的静态类型
          让JS可以更方便的面向对象（接口）编程。

    2）ES6新增了很多特性，工作的时候，常用特性如下：
      a）关键字let和const
         let是取代var的最佳方案，const定义常量
      b）解构赋值
         主要可以解构对象和数组，让我们可以少写代码
      c）模板字符串
         模板字符串，可以让我们直接在字符串中通过${变量}的方式输出变量。
      d）箭头函数
         箭头函数是ES6提供的一种函数的新写法
         注意：写jQuery的时候，不要用箭头函数，事件绑定的时候，不要用箭头函数（this的指向问题）
      e）默认参数
          function（参数=默认值）{}
      f）扩展运算符
         语法：...
         作用：提供了简单的方式，展开数组，还可以把“伪”数组，变为真数组
      g）promise
      h）async
      i）class类
      j）模板化module
      k）set数据结构
      l）map数据结构